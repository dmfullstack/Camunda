<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
        <artifactId>remote-command-executor</artifactId>
        <groupId>com.camunda.com</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

  <groupId>com.camunda.com</groupId>
  <artifactId>remote-command-executor-test</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <packaging>war</packaging>

  <name>Camunda BPM Process Application: remote-command-executor-test</name>
  <description>Process application that uses the Camunda BPM Platform and has been generated by the Maven archetype 'camunda-archetype-ejb-war-7.3.1-SNAPSHOT'</description>


  <dependencies>
    <dependency>
      <!-- client for Java EE application server integration, included in WAR as an alternative to write your own ProcessApplication class -->
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-ejb-client</artifactId>
    </dependency>
    <dependency>
      <!-- CDI integration, needs to be included in WAR, otherwise CDI can not work correctly -->
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-cdi</artifactId>
    </dependency>

    <dependency>
      <!-- AssertJ Testing Library -->
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Required to use Spin dataformat support in unit tests -->
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Required to use Connectors in unit tests -->
    <dependency>
      <groupId>org.camunda.connect</groupId>
      <artifactId>camunda-connect-connectors-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-connect</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Bootstrap for styling via Webjars project -->
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>2.3.2</version>
    </dependency>

    <!-- Java EE 6 APIs 
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>6.0</version>
      <scope>provided</scope>
    </dependency>
    Note that we cannot use the javax.javaee-api if running Arquillian, see
    https://developer.jboss.org/wiki/WhatsTheCauseOfThisExceptionJavalangClassFormatErrorAbsentCode 
    for the reasons why.
    -->
    <dependency>  
       <groupId>org.jboss.spec</groupId>  
       <artifactId>jboss-javaee-6.0</artifactId>  
       <version>1.0.0.Final</version>  
       <type>pom</type>  
       <scope>provided</scope>  
    </dependency>  	

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Needed for ArquillianTest -->
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- Needed for ArquillianTest -->
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- Needed for ArquillianTest -->
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Needed for InMemoryH2Test -->
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.168</version>
      <scope>test</scope>
    </dependency>

    <!-- Add your own dependencies here, if in compile scope, they are added to the war -->

    <dependency>
    	<groupId>com.camunda.com</groupId>
    	<artifactId>remote-command-executor-client</artifactId>
    	<version>0.0.1-SNAPSHOT</version>
    	<scope>test</scope>
    </dependency>
    <dependency>
    	<groupId>com.camunda.com</groupId>
    	<artifactId>remote-command-executor-service</artifactId>
    	<version>0.0.1-SNAPSHOT</version>
    	<type>ejb</type>
    	<scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
    	<scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <!-- Usage: mvn jboss-as:deploy See also: https://docs.jboss.org/jbossas/7/plugins/maven/latest/examples/deployment-example.html -->
        <groupId>org.jboss.as.plugins</groupId>
        <artifactId>jboss-as-maven-plugin</artifactId>
        <version>7.6.Final</version>
      </plugin>
      <plugin>
        <!-- Usage: mvn wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html -->
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <version>1.0.2.Final</version>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <!-- Needed for ArquillianTest -->
          <!-- Requires a running JBoss AS7 with Camunda BPM
               change to other artifact for embedded start or different server -->
          <!-- Included here for convenience when running the test in Eclipse -->
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-remote</artifactId>
          <version>${jboss.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.17</version>
            <configuration>
              <excludes>
                <!-- Exclusion for Arquillian test cases to avoid dependency on infrastructure 
                     for Maven build. Feel free to adjust to your testing requirements. -->
                <exclude>**/Arquillian*.java</exclude>
              </excludes>
            </configuration>
          </plugin>     
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>arq-jbossas-remote</id>
      <dependencies>
        <dependency>
          <!-- Needed for ArquillianTest -->
          <!-- Requires a running JBoss AS7 with Camunda BPM
               change to other artifact for embedded start or different server -->
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-remote</artifactId>
          <version>${jboss.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>arq-wildfly-remote</id>
      <dependencies>
        <dependency>
          <!-- Needed for ArquillianTest -->
          <!-- Requires a running Wildfly with Camunda BPM -->
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-remote</artifactId>
          <version>1.0.0.Alpha5</version>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>sun.jdk</groupId>
              <artifactId>jconsole</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
